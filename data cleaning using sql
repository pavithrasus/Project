use project;
select * from nashville;

-- populate property address that are blank

update  nashville
set propertyaddress = null
where propertyaddress = '';

update nashville a
join nashville b on a. parcelid = b.parcelid
and a.uniqueid <> b.uniqueid
set a.propertyaddress = b.propertyaddress
where a.propertyaddress is null;

-- breaking out address into individual columns
select propertyaddress from nashville;

select substring(propertyaddress , 1 , locate(',' , propertyaddress ) -1) as address ,
substring(propertyaddress , locate(',' , propertyaddress) + 1 , length(propertyaddress)) as city
from nashville;

alter table nashville
add propertysplitaddress varchar(255);

update nashville
set propertysplitaddress =  substring(propertyaddress , 1 , locate(',' , propertyaddress ) -1);

select * from nashville;

alter table nashville
add propertysplitcity varchar(255);

update nashville 
set propertysplitcity = substring(propertyaddress , locate(',' , propertyaddress) + 1 , length(propertyaddress)) ;

select * from nashville;

--splitting owner address 

select owneraddress from nashville;
select substring(owneraddress , 1 , locate(',' , owneraddress ) -1) as address ,
substring(owneraddress , locate(',' , owneraddress) + 1 , locate(',' , owneraddress)-4 ) as city ,
 substring_index(owneraddress , ',' ,  -1) as state
from nashville;

alter table nashville
add ownersplitaddress varchar(255);

update nashville 
set ownersplitaddress = substring(owneraddress , 1 , locate(',' , owneraddress ) -1) ;

alter table nashville
add ownersplitcity varchar(255);

update nashville 
set ownersplitcity = substring(owneraddress , locate(',' , owneraddress) + 1 , locate(',' , owneraddress)-4 ) ;

alter table nashville
add ownersplitstate varchar(255);

update nashville 
set ownersplitstate = substring_index(owneraddress , ',' ,  -1) ;

select * from nashville;


-- changing y to yes and n to no

select distinct(soldasvacant) , count(soldasvacant)
from nashville
group by soldasvacant
order by soldasvacant;

select soldasvacant,
case when soldasvacant = 'y' then 'yes'
when soldasvacant = 'n' then 'no'
else soldasvacant
end as soldasvacant
from nashville;

update nashville
set soldasvacant = case when soldasvacant = 'y' then 'yes'
when soldasvacant = 'n' then 'no'
else soldasvacant
end ;

--removing duplicates

with rownumcte as(
select * ,
row_number() over (
partition by ParcelID,
Propertyaddress ,
saleprice,
saledate,
legalreference
order by uniqueid
) as row_num
from nashville 
) 
delete from 
from rownumcte
where row_num > 1;


--deleting unused column

alter table nashville
drop column propertyaddress ;

alter table nashville
drop column owneraddress;

select * from nashville;



